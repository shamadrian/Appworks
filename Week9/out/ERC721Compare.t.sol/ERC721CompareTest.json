{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721Enumerable",
      "outputs": [
        {
          "internalType": "contract NFTMintWithERC721Enumerable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721a",
      "outputs": [
        {
          "internalType": "contract NFTMintWithERC721A",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_erc721A",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_erc721Enumerable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506144608061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c806385226c8111620000a3578063ba414fa6116200006e578063ba414fa61462000206578063bcbabe141462000221578063e20c9f71146200022b578063fa7626d4146200023557600080fd5b806385226c8114620001c55780639074c33e14620001de578063916a17c614620001f2578063b5508aa914620001fc57600080fd5b80633f7286f411620000e45780633f7286f4146200016b5780634757ba8b146200017557806351cc726414620001a257806366d9a9a014620001ac57600080fd5b80630a9254e4146200011a5780631ed7831c14620001265780632ade388014620001485780633e5e3c231462000161575b600080fd5b6200012462000243565b005b620001306200034a565b6040516200013f919062001718565b60405180910390f35b62000152620003ae565b6040516200013f9190620017bb565b62000130620004fc565b620001306200055e565b601d5462000189906001600160a01b031681565b6040516001600160a01b0390911681526020016200013f565b62000124620005c0565b620001b662000ac4565b6040516200013f919062001881565b620001cf62000bae565b6040516200013f919062001938565b601c5462000189906001600160a01b031681565b620001b662000c88565b620001cf62000d72565b6200021062000e4c565b60405190151581526020016200013f565b6200012462000f83565b620001306200138b565b600754620002109060ff1681565b6040516200025190620016fc565b604080825260059082015264546573744160d81b606082015260806020820181905260029082015261544160f01b60a082015260c001604051809103906000f080158015620002a4573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604051620002d3906200170a565b6040808252600690820152652a32b9ba3a1960d11b6060820152608060208201819052600290820152612a2160f11b60a082015260c001604051809103906000f08015801562000327573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b0392909216919091179055565b60606014805480602002602001604051908101604052809291908181526020018280548015620003a457602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000385575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620004f357600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620004db57838290600052602060002001805462000447906200199e565b80601f016020809104026020016040519081016040528092919081815260200182805462000475906200199e565b8015620004c65780601f106200049a57610100808354040283529160200191620004c6565b820191906000526020600020905b815481529060010190602001808311620004a857829003601f168201915b50505050508152602001906001019062000425565b505050508152505081526020019060010190620003d2565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015620003a4576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000385575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620003a4576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000385575050505050905090565b6000620005ea60405180604001604052806005815260200164757365723160d81b815250620013ed565b90506000620006196040518060400160405280600881526020016737b832b930ba37b960c11b815250620013ed565b9050600062000645604051806040016040528060058152602001643ab9b2b91960d91b815250620013ed565b6040516303223eab60e11b81526001600160a01b0385166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200069e57600080fd5b505af1158015620006b3573d6000803e3d6000fd5b5050601d546040516343508b0560e01b81526001600160a01b038781166004830152600a602483015290911692506343508b059150604401600060405180830381600087803b1580156200070657600080fd5b505af11580156200071b573d6000803e3d6000fd5b5050601d546040516370a0823160e01b81526001600160a01b0387811660048301526000945090911691506370a0823190602401602060405180830381865afa1580156200076d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007939190620019da565b9050620007d081600a1460405180604001604052806014815260200173062616c616e63652073686f756c642062652031360641b81525062001401565b601d5460405163a22cb46560e01b81526001600160a01b038581166004830152600160248301529091169063a22cb46590604401600060405180830381600087803b1580156200081f57600080fd5b505af115801562000834573d6000803e3d6000fd5b5050601d5460405163e985e9c560e01b81526001600160a01b0388811660048301528781166024830152620008f39450909116915063e985e9c5906044015b602060405180830381865afa15801562000891573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008b79190620019f4565b6040518060400160405280601b81526020017f6f70657261746f722073686f756c6420626520617070726f766564000000000081525062001401565b601d546040516369e9cae160e01b81526001600160a01b038681166004830152848116602483015260006044830152909116906369e9cae190606401600060405180830381600087803b1580156200094a57600080fd5b505af11580156200095f573d6000803e3d6000fd5b5050601d546040516370a0823160e01b81526001600160a01b03888116600483015290911692506370a082319150602401602060405180830381865afa158015620009ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009d49190620019da565b905062000a10816009146040518060400160405280601381526020017262616c616e63652073686f756c64206265203960681b81525062001401565b601d546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a08231906024015b602060405180830381865afa15801562000a5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a829190620019da565b905062000abe816001146040518060400160405280601381526020017262616c616e63652073686f756c64206265203160681b81525062001401565b50505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620004f35760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b9557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b565790505b5050505050815250508152602001906001019062000ae8565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620004f357838290600052602060002001805462000bf4906200199e565b80601f016020809104026020016040519081016040528092919081815260200182805462000c22906200199e565b801562000c735780601f1062000c475761010080835404028352916020019162000c73565b820191906000526020600020905b81548152906001019060200180831162000c5557829003601f168201915b50505050508152602001906001019062000bd2565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620004f35760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000d5957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000d1a5790505b5050505050815250508152602001906001019062000cac565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620004f357838290600052602060002001805462000db8906200199e565b80601f016020809104026020016040519081016040528092919081815260200182805462000de6906200199e565b801562000e375780601f1062000e0b5761010080835404028352916020019162000e37565b820191906000526020600020905b81548152906001019060200180831162000e1957829003601f168201915b50505050508152602001906001019062000d96565b600754600090610100900460ff161562000e6f5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f7e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f00917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001a1f565b60408051601f198184030181529082905262000f1c9162001a52565b6000604051808303816000865af19150503d806000811462000f5b576040519150601f19603f3d011682016040523d82523d6000602084013e62000f60565b606091505b509150508080602001905181019062000f7a9190620019f4565b9150505b919050565b600062000fad60405180604001604052806005815260200164757365723160d81b815250620013ed565b9050600062000fdc6040518060400160405280600881526020016737b832b930ba37b960c11b815250620013ed565b9050600062001008604051806040016040528060058152602001643ab9b2b91960d91b815250620013ed565b6040516303223eab60e11b81526001600160a01b0385166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200106157600080fd5b505af115801562001076573d6000803e3d6000fd5b5050601c546040516343508b0560e01b81526001600160a01b038781166004830152600a602483015290911692506343508b059150604401600060405180830381600087803b158015620010c957600080fd5b505af1158015620010de573d6000803e3d6000fd5b5050601c546040516370a0823160e01b81526001600160a01b0387811660048301526000945090911691506370a0823190602401602060405180830381865afa15801562001130573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011569190620019da565b90506200119381600a1460405180604001604052806014815260200173062616c616e63652073686f756c642062652031360641b81525062001401565b601c5460405163a22cb46560e01b81526001600160a01b038581166004830152600160248301529091169063a22cb46590604401600060405180830381600087803b158015620011e257600080fd5b505af1158015620011f7573d6000803e3d6000fd5b5050601c5460405163e985e9c560e01b81526001600160a01b03888116600483015287811660248301526200123b9450909116915063e985e9c59060440162000873565b601c546040516369e9cae160e01b81526001600160a01b038681166004830152848116602483015260006044830152909116906369e9cae190606401600060405180830381600087803b1580156200129257600080fd5b505af1158015620012a7573d6000803e3d6000fd5b5050601c546040516370a0823160e01b81526001600160a01b03888116600483015290911692506370a082319150602401602060405180830381865afa158015620012f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200131c9190620019da565b905062001358816009146040518060400160405280601381526020017262616c616e63652073686f756c64206265203960681b81525062001401565b601c546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a082319060240162000a3e565b60606013805480602002602001604051908101604052809291908181526020018280548015620003a4576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000385575050505050905090565b6000620013fa826200144f565b5092915050565b816200144b577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162001438919062001a70565b60405180910390a16200144b826200156e565b5050565b6000808260405160200162001465919062001a52565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620014d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014f7919062001aa1565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c7189062001535908590879060040162001acc565b600060405180830381600087803b1580156200155057600080fd5b505af115801562001565573d6000803e3d6000fd5b50505050915091565b80620015e6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015d49060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620015e6620015e9565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620016eb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001686929160200162001a1f565b60408051601f1981840301815290829052620016a29162001a52565b6000604051808303816000865af19150503d8060008114620016e1576040519150601f19603f3d011682016040523d82523d6000602084013e620016e6565b606091505b505050505b6007805461ff001916610100179055565b6112478062001afb83390190565b6116e98062002d4283390190565b6020808252825182820181905260009190848201906040850190845b818110156200175b5783516001600160a01b03168352928401929184019160010162001734565b50909695505050505050565b60005b83811015620017845781810151838201526020016200176a565b50506000910152565b60008151808452620017a781602086016020860162001767565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200187157603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200185a57605f19898503018352620018478486516200178d565b948e01949350918d019160010162001828565b505050978a019794505091880191600101620017e2565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200192957898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620019135783516001600160e01b0319168252928b019260019290920191908b0190620018e7565b50978a01979550505091870191600101620018a9565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200199157603f198886030184526200197e8583516200178d565b945092850192908501906001016200195f565b5092979650505050505050565b600181811c90821680620019b357607f821691505b602082108103620019d457634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215620019ed57600080fd5b5051919050565b60006020828403121562001a0757600080fd5b8151801515811462001a1857600080fd5b9392505050565b6001600160e01b031983168152815160009062001a4481600485016020870162001767565b919091016004019392505050565b6000825162001a6681846020870162001767565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600062001a1860808301846200178d565b60006020828403121562001ab457600080fd5b81516001600160a01b038116811462001a1857600080fd5b6001600160a01b038316815260406020820181905260009062001af2908301846200178d565b94935050505056fe60806040523480156200001157600080fd5b506040516200124738038062001247833981016040819052620000349162000128565b8181600262000044838262000221565b50600362000053828262000221565b506000805550620002ed92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008b57600080fd5b81516001600160401b0380821115620000a857620000a862000063565b604051601f8301601f19908116603f01168101908282118183101715620000d357620000d362000063565b81604052838152602092508683858801011115620000f057600080fd5b600091505b83821015620001145785820183015181830184015290820190620000f5565b600093810190920192909252949350505050565b600080604083850312156200013c57600080fd5b82516001600160401b03808211156200015457600080fd5b620001628683870162000079565b935060208501519150808211156200017957600080fd5b50620001888582860162000079565b9150509250929050565b600181811c90821680620001a757607f821691505b602082108103620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021c57600081815260208120601f850160051c81016020861015620001f75750805b601f850160051c820191505b81811015620002185782815560010162000203565b5050505b505050565b81516001600160401b038111156200023d576200023d62000063565b62000255816200024e845462000192565b84620001ce565b602080601f8311600181146200028d5760008415620002745750858301515b600019600386901b1c1916600185901b17855562000218565b600085815260208120601f198616915b82811015620002be578886015182559484019460019091019084016200029d565b5085821015620002dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610f4a80620002fd6000396000f3fe6080604052600436106100f35760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb4651461027a578063b88d4fde1461029a578063c87b56dd146102ad578063e985e9c5146102cd57600080fd5b80636352211e1461020557806369e9cae11461022557806370a082311461024557806395d89b411461026557600080fd5b806318160ddd116100c657806318160ddd1461019c57806323b872dd146101bf57806342842e0e146101d257806343508b05146101e557600080fd5b806301ffc9a7146100f857806306fdde031461012d578063081812fc1461014f578063095ea7b314610187575b600080fd5b34801561010457600080fd5b50610118610113366004610bba565b610316565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b50610142610368565b6040516101249190610c27565b34801561015b57600080fd5b5061016f61016a366004610c3a565b6103fa565b6040516001600160a01b039091168152602001610124565b61019a610195366004610c6f565b61043e565b005b3480156101a857600080fd5b50600154600054035b604051908152602001610124565b61019a6101cd366004610c99565b6104de565b61019a6101e0366004610c99565b610676565b3480156101f157600080fd5b5061019a610200366004610c6f565b610696565b34801561021157600080fd5b5061016f610220366004610c3a565b6106a4565b34801561023157600080fd5b5061019a610240366004610c99565b6106af565b34801561025157600080fd5b506101b1610260366004610cd5565b6106ba565b34801561027157600080fd5b50610142610709565b34801561028657600080fd5b5061019a610295366004610cf0565b610718565b61019a6102a8366004610d42565b610784565b3480156102b957600080fd5b506101426102c8366004610c3a565b6107ce565b3480156102d957600080fd5b506101186102e8366004610e1e565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061034757506380ac58cd60e01b6001600160e01b03198316145b806103625750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461037790610e51565b80601f01602080910402602001604051908101604052809291908181526020018280546103a390610e51565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b5050505050905090565b60006104058261085f565b610422576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610449826106a4565b9050336001600160a01b038216146104825761046581336102e8565b610482576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006104e982610886565b9050836001600160a01b0316816001600160a01b03161461051c5760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176105695761054c86336102e8565b61056957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661059057604051633a954ecd60e21b815260040160405180910390fd5b801561059b57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b8416900361062d5760018401600081815260046020526040812054900361062b57600054811461062b5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61069183838360405180602001604052806000815250610784565b505050565b6106a082826108ed565b5050565b600061036282610886565b610691838383610676565b60006001600160a01b0382166106e3576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461037790610e51565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61078f8484846104de565b6001600160a01b0383163b156107c8576107ab84848484610907565b6107c8576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606107d98261085f565b6107f657604051630a14c4b560e41b815260040160405180910390fd5b600061080d60408051602081019091526000815290565b9050805160000361082d5760405180602001604052806000815250610858565b80610837846109f2565b604051602001610848929190610e8b565b6040516020818303038152906040525b9392505050565b6000805482108015610362575050600090815260046020526040902054600160e01b161590565b6000816000548110156108d45760008181526004602052604081205490600160e01b821690036108d2575b806000036108585750600019016000818152600460205260409020546108b1565b505b604051636f96cda160e11b815260040160405180910390fd5b6106a0828260405180602001604052806000815250610a36565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061093c903390899088908890600401610eba565b6020604051808303816000875af1925050508015610977575060408051601f3d908101601f1916820190925261097491810190610ef7565b60015b6109d5573d8080156109a5576040519150601f19603f3d011682016040523d82523d6000602084013e6109aa565b606091505b5080516000036109cd576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610a0c5750819003601f19909101908152919050565b610a408383610aa3565b6001600160a01b0383163b15610691576000548281035b610a6a6000868380600101945086610907565b610a87576040516368d2bf6b60e11b815260040160405180910390fd5b818110610a57578160005414610a9c57600080fd5b5050505050565b6000805490829003610ac85760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610b7757808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610b3f565b5081600003610b9857604051622e076360e81b815260040160405180910390fd5b60005550505050565b6001600160e01b031981168114610bb757600080fd5b50565b600060208284031215610bcc57600080fd5b813561085881610ba1565b60005b83811015610bf2578181015183820152602001610bda565b50506000910152565b60008151808452610c13816020860160208601610bd7565b601f01601f19169290920160200192915050565b6020815260006108586020830184610bfb565b600060208284031215610c4c57600080fd5b5035919050565b80356001600160a01b0381168114610c6a57600080fd5b919050565b60008060408385031215610c8257600080fd5b610c8b83610c53565b946020939093013593505050565b600080600060608486031215610cae57600080fd5b610cb784610c53565b9250610cc560208501610c53565b9150604084013590509250925092565b600060208284031215610ce757600080fd5b61085882610c53565b60008060408385031215610d0357600080fd5b610d0c83610c53565b915060208301358015158114610d2157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610d5857600080fd5b610d6185610c53565b9350610d6f60208601610c53565b925060408501359150606085013567ffffffffffffffff80821115610d9357600080fd5b818701915087601f830112610da757600080fd5b813581811115610db957610db9610d2c565b604051601f8201601f19908116603f01168101908382118183101715610de157610de1610d2c565b816040528281528a6020848701011115610dfa57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610e3157600080fd5b610e3a83610c53565b9150610e4860208401610c53565b90509250929050565b600181811c90821680610e6557607f821691505b602082108103610e8557634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610e9d818460208801610bd7565b835190830190610eb1818360208801610bd7565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610eed90830184610bfb565b9695505050505050565b600060208284031215610f0957600080fd5b815161085881610ba156fea26469706673582212208928dfcfbb57a84b1e15fc4ae84bac650261f8db318affe8c67d2a532106fd6564736f6c6343000815003360806040523480156200001157600080fd5b50604051620016e9380380620016e9833981016040819052620000349162000123565b818160006200004483826200021c565b5060016200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113f180620002f86000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610242578063a22cb4651461024a578063b88d4fde1461025d578063c87b56dd14610270578063e985e9c51461028357600080fd5b80634f6ccce7146101f65780636352211e1461020957806369e9cae11461021c57806370a082311461022f57600080fd5b806318160ddd116100e957806318160ddd1461019857806323b872dd146101aa5780632f745c59146101bd57806342842e0e146101d057806343508b05146101e357600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004610ff3565b610296565b60405190151581526020015b60405180910390f35b61014b6102c1565b60405161013a9190611060565b61016b610166366004611073565b610353565b6040516001600160a01b03909116815260200161013a565b6101966101913660046110a8565b61037c565b005b6008545b60405190815260200161013a565b6101966101b83660046110d2565b61038b565b61019c6101cb3660046110a8565b61041b565b6101966101de3660046110d2565b610480565b6101966101f13660046110a8565b6104a0565b61019c610204366004611073565b6104c5565b61016b610217366004611073565b61051e565b61019661022a3660046110d2565b610529565b61019c61023d36600461110e565b610534565b61014b61057c565b610196610258366004611129565b61058b565b61019661026b36600461117b565b610596565b61014b61027e366004611073565b6105ad565b61012e610291366004611257565b610622565b60006001600160e01b0319821663780e9d6360e01b14806102bb57506102bb82610650565b92915050565b6060600080546102d09061128a565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc9061128a565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b5050505050905090565b600061035e826106a0565b506000828152600460205260409020546001600160a01b03166102bb565b6103878282336106d9565b5050565b6001600160a01b0382166103ba57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103c78383336106e6565b9050836001600160a01b0316816001600160a01b031614610415576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103b1565b50505050565b600061042683610534565b82106104575760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016103b1565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61049b83838360405180602001604052806000815250610596565b505050565b60005b8181101561049b576104b583826107bb565b6104be816112da565b90506104a3565b60006104d060085490565b82106104f95760405163295f44f760e21b815260006004820152602481018390526044016103b1565b6008828154811061050c5761050c6112f3565b90600052602060002001549050919050565b60006102bb826106a0565b61049b838383610480565b60006001600160a01b038216610560576040516322718ad960e21b8152600060048201526024016103b1565b506001600160a01b031660009081526003602052604090205490565b6060600180546102d09061128a565b6103873383836107d5565b6105a184848461038b565b61041584848484610874565b60606105b8826106a0565b5060006105d060408051602081019091526000815290565b905060008151116105f0576040518060200160405280600081525061061b565b806105fa8461099d565b60405160200161060b929190611309565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061068157506001600160e01b03198216635b5e139f60e01b145b806102bb57506301ffc9a760e01b6001600160e01b03198316146102bb565b6000818152600260205260408120546001600160a01b0316806102bb57604051637e27328960e01b8152600481018490526024016103b1565b61049b8383836001610a30565b6000806106f4858585610b36565b90506001600160a01b0381166107515761074c84600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610774565b846001600160a01b0316816001600160a01b031614610774576107748185610c2f565b6001600160a01b0385166107905761078b84610cc0565b6107b3565b846001600160a01b0316816001600160a01b0316146107b3576107b38585610d6f565b949350505050565b610387828260405180602001604052806000815250610dbf565b6001600160a01b03821661080757604051630b61174360e31b81526001600160a01b03831660048201526024016103b1565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561041557604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108b6903390889087908790600401611338565b6020604051808303816000875af19250505080156108f1575060408051601f3d908101601f191682019092526108ee91810190611375565b60015b61095a573d80801561091f576040519150601f19603f3d011682016040523d82523d6000602084013e610924565b606091505b50805160000361095257604051633250574960e11b81526001600160a01b03851660048201526024016103b1565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461099657604051633250574960e11b81526001600160a01b03851660048201526024016103b1565b5050505050565b606060006109aa83610dd6565b600101905060008167ffffffffffffffff8111156109ca576109ca611165565b6040519080825280601f01601f1916602001820160405280156109f4576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109fe57509392505050565b8080610a4457506001600160a01b03821615155b15610b06576000610a54846106a0565b90506001600160a01b03831615801590610a805750826001600160a01b0316816001600160a01b031614155b8015610a935750610a918184610622565b155b15610abc5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103b1565b8115610b045783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b0390811690831615610b6357610b63818486610eae565b6001600160a01b03811615610ba157610b80600085600080610a30565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610bd0576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610c3a83610534565b600083815260076020526040902054909150808214610c8d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090610cd290600190611392565b60008381526009602052604081205460088054939450909284908110610cfa57610cfa6112f3565b906000526020600020015490508060088381548110610d1b57610d1b6112f3565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480610d5357610d536113a5565b6001900381819060005260206000200160009055905550505050565b60006001610d7c84610534565b610d869190611392565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b610dc98383610f12565b61049b6000848484610874565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e155772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e41576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e5f57662386f26fc10000830492506010015b6305f5e1008310610e77576305f5e100830492506008015b6127108310610e8b57612710830492506004015b60648310610e9d576064830492506002015b600a83106102bb5760010192915050565b610eb9838383610f77565b61049b576001600160a01b038316610ee757604051637e27328960e01b8152600481018290526024016103b1565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103b1565b6001600160a01b038216610f3c57604051633250574960e11b8152600060048201526024016103b1565b6000610f4a838360006106e6565b90506001600160a01b0381161561049b576040516339e3563760e11b8152600060048201526024016103b1565b60006001600160a01b038316158015906107b35750826001600160a01b0316846001600160a01b03161480610fb15750610fb18484610622565b806107b35750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b031981168114610ff057600080fd5b50565b60006020828403121561100557600080fd5b813561061b81610fda565b60005b8381101561102b578181015183820152602001611013565b50506000910152565b6000815180845261104c816020860160208601611010565b601f01601f19169290920160200192915050565b60208152600061061b6020830184611034565b60006020828403121561108557600080fd5b5035919050565b80356001600160a01b03811681146110a357600080fd5b919050565b600080604083850312156110bb57600080fd5b6110c48361108c565b946020939093013593505050565b6000806000606084860312156110e757600080fd5b6110f08461108c565b92506110fe6020850161108c565b9150604084013590509250925092565b60006020828403121561112057600080fd5b61061b8261108c565b6000806040838503121561113c57600080fd5b6111458361108c565b91506020830135801515811461115a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561119157600080fd5b61119a8561108c565b93506111a86020860161108c565b925060408501359150606085013567ffffffffffffffff808211156111cc57600080fd5b818701915087601f8301126111e057600080fd5b8135818111156111f2576111f2611165565b604051601f8201601f19908116603f0116810190838211818310171561121a5761121a611165565b816040528281528a602084870101111561123357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561126a57600080fd5b6112738361108c565b91506112816020840161108c565b90509250929050565b600181811c9082168061129e57607f821691505b6020821081036112be57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016112ec576112ec6112c4565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000835161131b818460208801611010565b83519083019061132f818360208801611010565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061136b90830184611034565b9695505050505050565b60006020828403121561138757600080fd5b815161061b81610fda565b818103818111156102bb576102bb6112c4565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d389151606eea4c67fa6f5a08479bd5e2099faf40429f4c8389a0dbce88eacd364736f6c63430008150033a26469706673582212203b8152909eb18f9375762041c5e421a0d42a3a125ba01bd9b3c4431c66667f2364736f6c63430008150033",
    "sourceMap": "464:2207:34:-:0;;;1572:26:2;;;1594:4;-1:-1:-1;;1572:26:2;;;;;;;;3126:44:5;;;;;;;;;;;464:2207:34;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "464:2207:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:164;;;:::i;:::-;;2452:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;544:51:34:-;;;;;-1:-1:-1;;;;;544:51:34;;;;;;-1:-1:-1;;;;;3156:32:35;;;3138:51;;3126:2;3111:18;544:51:34;2955:240:35;1688:981:34;;;:::i;2738:178:8:-;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;505:33:34:-;;;;;-1:-1:-1;;;;;505:33:34;;;3069:146:8;;;:::i;2157:141::-;;;:::i;1819:584:2:-;;;:::i;:::-;;;5981:14:35;;5974:22;5956:41;;5944:2;5929:18;1819:584:2;5816:187:35;772:910:34;;;:::i;2304:142:8:-;;;:::i;1572:26:2:-;;;;;;;;;602:164:34;646:37;;;;;:::i;:::-;6311:2:35;6293:21;;;6350:1;6330:18;;;6323:29;-1:-1:-1;;;6383:2:35;6368:18;;6361:35;6434:3;6427:4;6412:20;;6405:33;;;6475:1;6454:19;;;6447:30;-1:-1:-1;;;6508:3:35;6493:19;;6486:33;6551:3;6536:19;646:37:34;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;636:7:34;:47;;-1:-1:-1;;;;;;636:47:34;-1:-1:-1;;;;;636:47:34;;;;;;;;;;712;;;;;:::i;:::-;6869:2:35;6851:21;;;6908:1;6888:18;;;6881:29;-1:-1:-1;;;6941:2:35;6926:18;;6919:36;6993:3;6986:4;6971:20;;6964:33;;;7034:1;7013:19;;;7006:30;-1:-1:-1;;;7067:3:35;7052:19;;7045:33;7110:3;7095:19;712:47:34;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;693:16:34;:66;;-1:-1:-1;;;;;;693:66:34;-1:-1:-1;;;;;693:66:34;;;;;;;;;;602:164::o;2452:134:8:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:8;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:8;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:8;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;1688:981:34:-;1764:13;1780:17;;;;;;;;;;;;;;-1:-1:-1;;;1780:17:34;;;:8;:17::i;:::-;1764:33;;1807:16;1826:20;;;;;;;;;;;;;;-1:-1:-1;;;1826:20:34;;;:8;:20::i;:::-;1807:39;;1856:13;1872:17;;;;;;;;;;;;;;-1:-1:-1;;;1872:17:34;;;:8;:17::i;:::-;1932:20;;-1:-1:-1;;;1932:20:34;;-1:-1:-1;;;;;3156:32:35;;1932:20:34;;;3138:51:35;1856:33:34;;-1:-1:-1;1932:13:34;;;;3111:18:35;;1932:20:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1962:16:34;;:37;;-1:-1:-1;;;1962:37:34;;-1:-1:-1;;;;;7919:32:35;;;1962:37:34;;;7901:51:35;1996:2:34;7968:18:35;;;7961:34;1962:16:34;;;;-1:-1:-1;1962:26:34;;-1:-1:-1;7874:18:35;;1962:37:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2027:16:34;;:33;;-1:-1:-1;;;2027:33:34;;-1:-1:-1;;;;;3156:32:35;;;2027:33:34;;;3138:51:35;2009:15:34;;-1:-1:-1;2027:16:34;;;;-1:-1:-1;2027:26:34;;3111:18:35;;2027:33:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2009:51;;2070:49;2081:7;2092:2;2081:13;2070:49;;;;;;;;;;;;;-1:-1:-1;;;2070:49:34;;;:10;:49::i;:::-;2188:16;;:50;;-1:-1:-1;;;2188:50:34;;-1:-1:-1;;;;;8381:32:35;;;2188:50:34;;;8363:51:35;2188:16:34;8430:18:35;;;8423:50;2188:16:34;;;;:34;;8336:18:35;;2188:50:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2259:16:34;;:50;;-1:-1:-1;;;2259:50:34;;-1:-1:-1;;;;;8714:15:35;;;2259:50:34;;;8696:34:35;8766:15;;;8746:18;;;8739:43;2248:93:34;;-1:-1:-1;2259:16:34;;;;-1:-1:-1;2259:33:34;;8631:18:35;;2259:50:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2248:93;;;;;;;;;;;;;;;;;:10;:93::i;:::-;2397:16;;:45;;-1:-1:-1;;;2397:45:34;;-1:-1:-1;;;;;9341:15:35;;;2397:45:34;;;9323:34:35;9393:15;;;9373:18;;;9366:43;2397:16:34;9425:18:35;;;9418:34;2397:16:34;;;;:28;;9258:18:35;;2397:45:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:16:34;;:33;;-1:-1:-1;;;2462:33:34;;-1:-1:-1;;;;;3156:32:35;;;2462:33:34;;;3138:51:35;2462:16:34;;;;-1:-1:-1;2462:26:34;;-1:-1:-1;3111:18:35;;2462:33:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2452:43;;2505:47;2516:7;2527:1;2516:12;2505:47;;;;;;;;;;;;;-1:-1:-1;;;2505:47:34;;;:10;:47::i;:::-;2572:16;;:33;;-1:-1:-1;;;2572:33:34;;-1:-1:-1;;;;;3156:32:35;;;2572:33:34;;;3138:51:35;2572:16:34;;;;:26;;3111:18:35;;2572:33:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2562:43;;2615:47;2626:7;2637:1;2626:12;2615:47;;;;;;;;;;;;;-1:-1:-1;;;2615:47:34;;;:10;:47::i;:::-;1728:941;;;;1688:981::o;2738:178:8:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:2;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:2;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7901:51:35;;;-1:-1:-1;;;7968:18:35;;;7961:34;2196:43:2;;;;;;;;;7874:18:35;;;2196:43:2;;;-1:-1:-1;;1671:64:2;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:2;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:2:o;772:910:34:-;839:13;855:17;;;;;;;;;;;;;;-1:-1:-1;;;855:17:34;;;:8;:17::i;:::-;839:33;;882:16;901:20;;;;;;;;;;;;;;-1:-1:-1;;;901:20:34;;;:8;:20::i;:::-;882:39;;931:13;947:17;;;;;;;;;;;;;;-1:-1:-1;;;947:17:34;;;:8;:17::i;:::-;1007:20;;-1:-1:-1;;;1007:20:34;;-1:-1:-1;;;;;3156:32:35;;1007:20:34;;;3138:51:35;931:33:34;;-1:-1:-1;1007:13:34;;;;3111:18:35;;1007:20:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1037:7:34;;:28;;-1:-1:-1;;;1037:28:34;;-1:-1:-1;;;;;7919:32:35;;;1037:28:34;;;7901:51:35;1062:2:34;7968:18:35;;;7961:34;1037:7:34;;;;-1:-1:-1;1037:17:34;;-1:-1:-1;7874:18:35;;1037:28:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1093:7:34;;:24;;-1:-1:-1;;;1093:24:34;;-1:-1:-1;;;;;3156:32:35;;;1093:24:34;;;3138:51:35;1075:15:34;;-1:-1:-1;1093:7:34;;;;-1:-1:-1;1093:17:34;;3111:18:35;;1093:24:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1075:42;;1127:49;1138:7;1149:2;1138:13;1127:49;;;;;;;;;;;;;-1:-1:-1;;;1127:49:34;;;:10;:49::i;:::-;1245:7;;:41;;-1:-1:-1;;;1245:41:34;;-1:-1:-1;;;;;8381:32:35;;;1245:41:34;;;8363:51:35;1245:7:34;8430:18:35;;;8423:50;1245:7:34;;;;:25;;8336:18:35;;1245:41:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1307:7:34;;:41;;-1:-1:-1;;;1307:41:34;;-1:-1:-1;;;;;8714:15:35;;;1307:41:34;;;8696:34:35;8766:15;;;8746:18;;;8739:43;1296:84:34;;-1:-1:-1;1307:7:34;;;;-1:-1:-1;1307:24:34;;8631:18:35;;1307:41:34;8484:304:35;1296:84:34;1436:7;;:36;;-1:-1:-1;;;1436:36:34;;-1:-1:-1;;;;;9341:15:35;;;1436:36:34;;;9323:34:35;9393:15;;;9373:18;;;9366:43;1436:7:34;9425:18:35;;;9418:34;1436:7:34;;;;:19;;9258:18:35;;1436:36:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1492:7:34;;:24;;-1:-1:-1;;;1492:24:34;;-1:-1:-1;;;;;3156:32:35;;;1492:24:34;;;3138:51:35;1492:7:34;;;;-1:-1:-1;1492:17:34;;-1:-1:-1;3111:18:35;;1492:24:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1482:34;;1526:47;1537:7;1548:1;1537:12;1526:47;;;;;;;;;;;;;-1:-1:-1;;;1526:47:34;;;:10;:47::i;:::-;1593:7;;:24;;-1:-1:-1;;;1593:24:34;;-1:-1:-1;;;;;3156:32:35;;;1593:24:34;;;3138:51:35;1593:7:34;;;;:17;;3111:18:35;;1593:24:34;2955:240:35;2304:142:8;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:8;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;20439:125:6:-;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:6;20439:125;-1:-1:-1;;20439:125:6:o;3425:191:2:-;3504:9;3499:111;;3534:30;3560:3;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;:::-;3425:191;;:::o;20158:242:6:-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:6;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:6;;;;;11314:25:35;;;20293:33:6;-1:-1:-1;20344:7:6;;;;11287:18:35;;20344:19:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:6;;20337:26;;-1:-1:-1;20373:8:6;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;3262:157:2:-;3322:9;3317:96;;3352:30;;;;;12169:2:35;12151:21;;;12208:2;12188:18;;;12181:30;12247:25;12242:2;12227:18;;12220:53;12305:2;12290:18;;11967:347;3352:30:2;;;;;;;;3396:6;:4;:6::i;:::-;3262:157;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;12521:51:35;;;-1:-1:-1;;;12588:18:35;;;12581:34;;;;2712:4:2;12631:18:35;;;12624:34;2489:11:2;;1671:64;2586:43;;12494:18:35;;2652:67:2;;;-1:-1:-1;;2652:67:2;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:2;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:2;2820:7;:14;;-1:-1:-1;;2820:14:2;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:35:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:35;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:35;;14:658;-1:-1:-1;;;;;;14:658:35:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:35;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:35;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:35:o;1208:1742::-;1441:2;1493:21;;;1563:13;;1466:18;;;1585:22;;;1412:4;;1441:2;1626;;1644:18;;;;1681:1;1724:15;;;1709:31;;1705:40;;1768:15;;;1412:4;;1832:1089;1848:6;1843:3;1840:15;1832:1089;;;-1:-1:-1;;1917:22:35;;;1913:36;1901:49;;1973:13;;2060:9;;-1:-1:-1;;;;;2056:35:35;2041:51;;2131:11;;2125:18;2163:15;;;2156:27;;;2244:19;;2013:15;;;2276:24;;;2457:21;;;;2323:2;2405:17;;;2393:30;;2389:39;;;2347:15;;;;2502:1;2516:296;2532:8;2527:3;2524:17;2516:296;;;2638:2;2634:7;2625:6;2617;2613:19;2609:33;2602:5;2595:48;2670:42;2705:6;2694:8;2688:15;2670:42;:::i;:::-;2741:17;;;;2660:52;-1:-1:-1;2784:14:35;;;;2560:1;2551:11;2516:296;;;-1:-1:-1;;;2899:12:35;;;;2835:6;-1:-1:-1;;2864:15:35;;;;1874:1;1865:11;1832:1089;;;-1:-1:-1;2938:6:35;;1208:1742;-1:-1:-1;;;;;;;;;;1208:1742:35:o;3200:1567::-;3402:4;3431:2;3471;3460:9;3456:18;3501:2;3490:9;3483:21;3524:6;3559;3553:13;3590:6;3582;3575:22;3616:2;3606:12;;3649:2;3638:9;3634:18;3627:25;;3711:2;3701:6;3698:1;3694:14;3683:9;3679:30;3675:39;3749:2;3741:6;3737:15;3770:1;3791;3801:937;3817:6;3812:3;3809:15;3801:937;;;3886:22;;;-1:-1:-1;;3882:36:35;3870:49;;3942:13;;4029:9;;-1:-1:-1;;;;;4025:35:35;4010:51;;4100:11;;4094:18;4132:15;;;4125:27;;;4213:19;;3982:15;;;4245:24;;;4335:21;;;;4380:1;;4303:2;4291:15;;;4394:236;4410:8;4405:3;4402:17;4394:236;;;4491:15;;-1:-1:-1;;;;;;4487:42:35;4473:57;;4599:17;;;;4438:1;4429:11;;;;;4556:14;;;;4394:236;;;-1:-1:-1;4716:12:35;;;;4653:5;-1:-1:-1;;;4681:15:35;;;;3843:1;3834:11;3801:937;;;-1:-1:-1;4755:6:35;;3200:1567;-1:-1:-1;;;;;;;;;3200:1567:35:o;4772:803::-;4934:4;4963:2;5003;4992:9;4988:18;5033:2;5022:9;5015:21;5056:6;5091;5085:13;5122:6;5114;5107:22;5160:2;5149:9;5145:18;5138:25;;5222:2;5212:6;5209:1;5205:14;5194:9;5190:30;5186:39;5172:53;;5260:2;5252:6;5248:15;5281:1;5291:255;5305:6;5302:1;5299:13;5291:255;;;5398:2;5394:7;5382:9;5374:6;5370:22;5366:36;5361:3;5354:49;5426:40;5459:6;5450;5444:13;5426:40;:::i;:::-;5416:50;-1:-1:-1;5524:12:35;;;;5489:15;;;;5327:1;5320:9;5291:255;;;-1:-1:-1;5563:6:35;;4772:803;-1:-1:-1;;;;;;;4772:803:35:o;7125:380::-;7204:1;7200:12;;;;7247;;;7268:61;;7322:4;7314:6;7310:17;7300:27;;7268:61;7375:2;7367:6;7364:14;7344:18;7341:38;7338:161;;7421:10;7416:3;7412:20;7409:1;7402:31;7456:4;7453:1;7446:15;7484:4;7481:1;7474:15;7338:161;;7125:380;;;:::o;8006:184::-;8076:6;8129:2;8117:9;8108:7;8104:23;8100:32;8097:52;;;8145:1;8142;8135:12;8097:52;-1:-1:-1;8168:16:35;;8006:184;-1:-1:-1;8006:184:35:o;8793:277::-;8860:6;8913:2;8901:9;8892:7;8888:23;8884:32;8881:52;;;8929:1;8926;8919:12;8881:52;8961:9;8955:16;9014:5;9007:13;9000:21;8993:5;8990:32;8980:60;;9036:1;9033;9026:12;8980:60;9059:5;8793:277;-1:-1:-1;;;8793:277:35:o;9742:384::-;-1:-1:-1;;;;;;9927:33:35;;9915:46;;9984:13;;9897:3;;10006:74;9984:13;10069:1;10060:11;;10053:4;10041:17;;10006:74;:::i;:::-;10100:16;;;;10118:1;10096:24;;9742:384;-1:-1:-1;;;9742:384:35:o;10131:287::-;10260:3;10298:6;10292:13;10314:66;10373:6;10368:3;10361:4;10353:6;10349:17;10314:66;:::i;:::-;10396:16;;;;;10131:287;-1:-1:-1;;10131:287:35:o;10423:446::-;10673:2;10662:9;10655:21;10712:1;10707:2;10696:9;10692:18;10685:29;-1:-1:-1;;;10745:2:35;10734:9;10730:18;10723:35;10796:3;10789:4;10778:9;10774:20;10767:33;10636:4;10817:46;10858:3;10847:9;10843:19;10835:6;10817:46;:::i;11350:290::-;11420:6;11473:2;11461:9;11452:7;11448:23;11444:32;11441:52;;;11489:1;11486;11479:12;11441:52;11515:16;;-1:-1:-1;;;;;11560:31:35;;11550:42;;11540:70;;11606:1;11603;11596:12;11645:317;-1:-1:-1;;;;;11822:32:35;;11804:51;;11891:2;11886;11871:18;;11864:30;;;-1:-1:-1;;11911:45:35;;11937:18;;11929:6;11911:45;:::i;:::-;11903:53;11645:317;-1:-1:-1;;;;11645:317:35:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "erc721Enumerable()": "4757ba8b",
    "erc721a()": "9074c33e",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_erc721A()": "bcbabe14",
    "test_erc721Enumerable()": "51cc7264"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721Enumerable\",\"outputs\":[{\"internalType\":\"contract NFTMintWithERC721Enumerable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721a\",\"outputs\":[{\"internalType\":\"contract NFTMintWithERC721A\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_erc721A\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_erc721Enumerable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ERC721Compare.t.sol\":\"ERC721CompareTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc721a/=lib/erc721a/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"lib/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85\",\"dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ERC721Compare.sol\":{\"keccak256\":\"0x23f71612b9e3edfebedcee9ae6f18acb5355b9fda72f41dabd361593d49bc268\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e7e3f29b9794332d77caa6d440aa875b587b4b439404aa3f40121fbc87d9cdd8\",\"dweb:/ipfs/QmYeHz2KX4DTNuRTPi7LrPAqzkHdHrFuu8oAUMssTe3GpA\"]},\"test/ERC721Compare.t.sol\":{\"keccak256\":\"0x1120eac68d1d2978a1c9537821393b5a2e0595a5879ee40d1ddb5af6223a1e02\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7a2f6891ae371c3124bb8516ecd2c3f90f02d84461d492eccc2f6c5046af8d91\",\"dweb:/ipfs/QmXs6YybJuQu9cLVWNtqtUyAj6BDqct7ouAAMB28KA2NgY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "erc721Enumerable",
          "outputs": [
            {
              "internalType": "contract NFTMintWithERC721Enumerable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "erc721a",
          "outputs": [
            {
              "internalType": "contract NFTMintWithERC721A",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_erc721A"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_erc721Enumerable"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "erc721a/=lib/erc721a/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ERC721Compare.t.sol": "ERC721CompareTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/erc721a/contracts/ERC721A.sol": {
        "keccak256": "0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c",
        "urls": [
          "bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809",
          "dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy"
        ],
        "license": "MIT"
      },
      "lib/erc721a/contracts/IERC721A.sol": {
        "keccak256": "0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad",
        "urls": [
          "bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9",
          "dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273",
        "urls": [
          "bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85",
          "dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16",
        "urls": [
          "bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a",
          "dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de",
        "urls": [
          "bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff",
          "dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "src/ERC721Compare.sol": {
        "keccak256": "0x23f71612b9e3edfebedcee9ae6f18acb5355b9fda72f41dabd361593d49bc268",
        "urls": [
          "bzz-raw://e7e3f29b9794332d77caa6d440aa875b587b4b439404aa3f40121fbc87d9cdd8",
          "dweb:/ipfs/QmYeHz2KX4DTNuRTPi7LrPAqzkHdHrFuu8oAUMssTe3GpA"
        ],
        "license": "UNLICENSED"
      },
      "test/ERC721Compare.t.sol": {
        "keccak256": "0x1120eac68d1d2978a1c9537821393b5a2e0595a5879ee40d1ddb5af6223a1e02",
        "urls": [
          "bzz-raw://7a2f6891ae371c3124bb8516ecd2c3f90f02d84461d492eccc2f6c5046af8d91",
          "dweb:/ipfs/QmXs6YybJuQu9cLVWNtqtUyAj6BDqct7ouAAMB28KA2NgY"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ERC721Compare.t.sol",
    "id": 48751,
    "exportedSymbols": {
      "Context": [
        46950
      ],
      "ERC165": [
        47229
      ],
      "ERC721": [
        46349
      ],
      "ERC721A": [
        1622
      ],
      "ERC721A__IERC721Receiver": [
        17
      ],
      "ERC721CompareTest": [
        48750
      ],
      "ERC721Enumerable": [
        46868
      ],
      "IERC165": [
        47241
      ],
      "IERC721": [
        46466
      ],
      "IERC721A": [
        1828
      ],
      "IERC721Enumerable": [
        46900
      ],
      "IERC721Errors": [
        45293
      ],
      "IERC721Metadata": [
        46928
      ],
      "IERC721Receiver": [
        46484
      ],
      "NFTMintWithERC721A": [
        48449
      ],
      "NFTMintWithERC721Enumerable": [
        48505
      ],
      "Strings": [
        47205
      ],
      "Test": [
        14070
      ],
      "console2": [
        31965
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2633:34",
    "nodes": [
      {
        "id": 48507,
        "nodeType": "PragmaDirective",
        "src": "39:24:34",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 48510,
        "nodeType": "ImportDirective",
        "src": "65:50:34",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48751,
        "sourceUnit": 14071,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48508,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14070,
              "src": "73:4:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48509,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31965,
              "src": "79:8:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48512,
        "nodeType": "ImportDirective",
        "src": "116:60:34",
        "nodes": [],
        "absolutePath": "src/ERC721Compare.sol",
        "file": "../src/ERC721Compare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48751,
        "sourceUnit": 48506,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48511,
              "name": "NFTMintWithERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48449,
              "src": "124:18:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48514,
        "nodeType": "ImportDirective",
        "src": "177:69:34",
        "nodes": [],
        "absolutePath": "src/ERC721Compare.sol",
        "file": "../src/ERC721Compare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48751,
        "sourceUnit": 48506,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48513,
              "name": "NFTMintWithERC721Enumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48505,
              "src": "185:27:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48515,
        "nodeType": "ImportDirective",
        "src": "247:73:34",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48751,
        "sourceUnit": 46350,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48516,
        "nodeType": "ImportDirective",
        "src": "321:94:34",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48751,
        "sourceUnit": 46869,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48517,
        "nodeType": "ImportDirective",
        "src": "416:46:34",
        "nodes": [],
        "absolutePath": "lib/erc721a/contracts/ERC721A.sol",
        "file": "../lib/erc721a/contracts/ERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48751,
        "sourceUnit": 1623,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48750,
        "nodeType": "ContractDefinition",
        "src": "464:2207:34",
        "nodes": [
          {
            "id": 48522,
            "nodeType": "VariableDeclaration",
            "src": "505:33:34",
            "nodes": [],
            "constant": false,
            "functionSelector": "9074c33e",
            "mutability": "mutable",
            "name": "erc721a",
            "nameLocation": "531:7:34",
            "scope": 48750,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
              "typeString": "contract NFTMintWithERC721A"
            },
            "typeName": {
              "id": 48521,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48520,
                "name": "NFTMintWithERC721A",
                "nameLocations": [
                  "505:18:34"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48449,
                "src": "505:18:34"
              },
              "referencedDeclaration": 48449,
              "src": "505:18:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                "typeString": "contract NFTMintWithERC721A"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48525,
            "nodeType": "VariableDeclaration",
            "src": "544:51:34",
            "nodes": [],
            "constant": false,
            "functionSelector": "4757ba8b",
            "mutability": "mutable",
            "name": "erc721Enumerable",
            "nameLocation": "579:16:34",
            "scope": 48750,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
              "typeString": "contract NFTMintWithERC721Enumerable"
            },
            "typeName": {
              "id": 48524,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48523,
                "name": "NFTMintWithERC721Enumerable",
                "nameLocations": [
                  "544:27:34"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48505,
                "src": "544:27:34"
              },
              "referencedDeclaration": 48505,
              "src": "544:27:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                "typeString": "contract NFTMintWithERC721Enumerable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48547,
            "nodeType": "FunctionDefinition",
            "src": "602:164:34",
            "nodes": [],
            "body": {
              "id": 48546,
              "nodeType": "Block",
              "src": "626:140:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48528,
                      "name": "erc721a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48522,
                      "src": "636:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                        "typeString": "contract NFTMintWithERC721A"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5465737441",
                          "id": 48532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "669:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d54d3d9022d89de63b1c9c79ce244336a16f64c5b6b27feae28a5ebd270be8ee",
                            "typeString": "literal_string \"TestA\""
                          },
                          "value": "TestA"
                        },
                        {
                          "hexValue": "5441",
                          "id": 48533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "678:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ef82cc74a34211697cb87f1279e66832ee4958064d55b955c515bfec77ba8016",
                            "typeString": "literal_string \"TA\""
                          },
                          "value": "TA"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d54d3d9022d89de63b1c9c79ce244336a16f64c5b6b27feae28a5ebd270be8ee",
                            "typeString": "literal_string \"TestA\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ef82cc74a34211697cb87f1279e66832ee4958064d55b955c515bfec77ba8016",
                            "typeString": "literal_string \"TA\""
                          }
                        ],
                        "id": 48531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "646:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_NFTMintWithERC721A_$48449_$",
                          "typeString": "function (string memory,string memory) returns (contract NFTMintWithERC721A)"
                        },
                        "typeName": {
                          "id": 48530,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48529,
                            "name": "NFTMintWithERC721A",
                            "nameLocations": [
                              "650:18:34"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48449,
                            "src": "650:18:34"
                          },
                          "referencedDeclaration": 48449,
                          "src": "650:18:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                            "typeString": "contract NFTMintWithERC721A"
                          }
                        }
                      },
                      "id": 48534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "646:37:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                        "typeString": "contract NFTMintWithERC721A"
                      }
                    },
                    "src": "636:47:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                      "typeString": "contract NFTMintWithERC721A"
                    }
                  },
                  "id": 48536,
                  "nodeType": "ExpressionStatement",
                  "src": "636:47:34"
                },
                {
                  "expression": {
                    "id": 48544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48537,
                      "name": "erc721Enumerable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48525,
                      "src": "693:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                        "typeString": "contract NFTMintWithERC721Enumerable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546573747432",
                          "id": 48541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "744:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b7439e4262acb3a9262462675fb7c14b669d87958af82d2cea17dcf9199fee7b",
                            "typeString": "literal_string \"Testt2\""
                          },
                          "value": "Testt2"
                        },
                        {
                          "hexValue": "5442",
                          "id": 48542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "754:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a93af70c5699d14b835fb4daebde67e376db7da71a152e136af3228c5e7fc499",
                            "typeString": "literal_string \"TB\""
                          },
                          "value": "TB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b7439e4262acb3a9262462675fb7c14b669d87958af82d2cea17dcf9199fee7b",
                            "typeString": "literal_string \"Testt2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a93af70c5699d14b835fb4daebde67e376db7da71a152e136af3228c5e7fc499",
                            "typeString": "literal_string \"TB\""
                          }
                        ],
                        "id": 48540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "712:31:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_NFTMintWithERC721Enumerable_$48505_$",
                          "typeString": "function (string memory,string memory) returns (contract NFTMintWithERC721Enumerable)"
                        },
                        "typeName": {
                          "id": 48539,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48538,
                            "name": "NFTMintWithERC721Enumerable",
                            "nameLocations": [
                              "716:27:34"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48505,
                            "src": "716:27:34"
                          },
                          "referencedDeclaration": 48505,
                          "src": "716:27:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                            "typeString": "contract NFTMintWithERC721Enumerable"
                          }
                        }
                      },
                      "id": 48543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "712:47:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                        "typeString": "contract NFTMintWithERC721Enumerable"
                      }
                    },
                    "src": "693:66:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                      "typeString": "contract NFTMintWithERC721Enumerable"
                    }
                  },
                  "id": 48545,
                  "nodeType": "ExpressionStatement",
                  "src": "693:66:34"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "611:5:34",
            "parameters": {
              "id": 48526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:2:34"
            },
            "returnParameters": {
              "id": 48527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:0:34"
            },
            "scope": 48750,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48648,
            "nodeType": "FunctionDefinition",
            "src": "772:910:34",
            "nodes": [],
            "body": {
              "id": 48647,
              "nodeType": "Block",
              "src": "803:879:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48551,
                      "mutability": "mutable",
                      "name": "user1",
                      "nameLocation": "847:5:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48647,
                      "src": "839:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48550,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "839:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48555,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7573657231",
                        "id": 48553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                          "typeString": "literal_string \"user1\""
                        },
                        "value": "user1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                          "typeString": "literal_string \"user1\""
                        }
                      ],
                      "id": 48552,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8199,
                      "src": "855:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 48554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "855:17:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "839:33:34"
                },
                {
                  "assignments": [
                    48557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48557,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "890:8:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48647,
                      "src": "882:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48556,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "882:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48561,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6f70657261746f72",
                        "id": 48559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "910:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                          "typeString": "literal_string \"operator\""
                        },
                        "value": "operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                          "typeString": "literal_string \"operator\""
                        }
                      ],
                      "id": 48558,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8199,
                      "src": "901:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 48560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:20:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "882:39:34"
                },
                {
                  "assignments": [
                    48563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48563,
                      "mutability": "mutable",
                      "name": "user2",
                      "nameLocation": "939:5:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48647,
                      "src": "931:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48562,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48567,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7573657232",
                        "id": 48565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "956:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                          "typeString": "literal_string \"user2\""
                        },
                        "value": "user2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                          "typeString": "literal_string \"user2\""
                        }
                      ],
                      "id": 48564,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8199,
                      "src": "947:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 48566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:17:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "931:33:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48571,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48551,
                        "src": "1021:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48568,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4179,
                        "src": "1007:2:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15776",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1010:10:34",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15442,
                      "src": "1007:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:20:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48573,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:20:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48577,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48551,
                        "src": "1055:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 48578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1062:2:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 48574,
                        "name": "erc721a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48522,
                        "src": "1037:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                          "typeString": "contract NFTMintWithERC721A"
                        }
                      },
                      "id": 48576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1045:9:34",
                      "memberName": "batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48432,
                      "src": "1037:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1037:28:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48580,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:28:34"
                },
                {
                  "assignments": [
                    48582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48582,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1083:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48647,
                      "src": "1075:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48581,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1075:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48587,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48585,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48551,
                        "src": "1111:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48583,
                        "name": "erc721a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48522,
                        "src": "1093:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                          "typeString": "contract NFTMintWithERC721A"
                        }
                      },
                      "id": 48584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1101:9:34",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 219,
                      "src": "1093:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:24:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1075:42:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48589,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48582,
                          "src": "1138:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 48590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1149:2:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1138:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e63652073686f756c64206265203130",
                        "id": 48592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1153:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b4f3b8624b3a8738bc5bedce4066c96dc23167bfd04c1b0516db277d9d60dd3",
                          "typeString": "literal_string \"balance should be 10\""
                        },
                        "value": "balance should be 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b4f3b8624b3a8738bc5bedce4066c96dc23167bfd04c1b0516db277d9d60dd3",
                          "typeString": "literal_string \"balance should be 10\""
                        }
                      ],
                      "id": 48588,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "1127:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:49:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48594,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:49:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48598,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48557,
                        "src": "1271:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1281:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 48595,
                        "name": "erc721a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48522,
                        "src": "1245:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                          "typeString": "contract NFTMintWithERC721A"
                        }
                      },
                      "id": 48597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1253:17:34",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 702,
                      "src": "1245:25:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 48600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:41:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48601,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:41:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48605,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48551,
                            "src": "1332:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 48606,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48557,
                            "src": "1339:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48603,
                            "name": "erc721a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48522,
                            "src": "1307:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                              "typeString": "contract NFTMintWithERC721A"
                            }
                          },
                          "id": 48604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1315:16:34",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 720,
                          "src": "1307:24:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 48607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1307:41:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f70657261746f722073686f756c6420626520617070726f766564",
                        "id": 48608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1350:29:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03de3f1219b66e8c6535ba33fd55fd7f7c5449e8715dbc11706def83a10c7087",
                          "typeString": "literal_string \"operator should be approved\""
                        },
                        "value": "operator should be approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03de3f1219b66e8c6535ba33fd55fd7f7c5449e8715dbc11706def83a10c7087",
                          "typeString": "literal_string \"operator should be approved\""
                        }
                      ],
                      "id": 48602,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "1296:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:84:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48610,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:84:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48614,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48551,
                        "src": "1456:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48615,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48563,
                        "src": "1463:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1470:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 48611,
                        "name": "erc721a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48522,
                        "src": "1436:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                          "typeString": "contract NFTMintWithERC721A"
                        }
                      },
                      "id": 48613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1444:11:34",
                      "memberName": "transferNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48448,
                      "src": "1436:19:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 48617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1436:36:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48618,
                  "nodeType": "ExpressionStatement",
                  "src": "1436:36:34"
                },
                {
                  "expression": {
                    "id": 48624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48619,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48582,
                      "src": "1482:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48622,
                          "name": "user1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48551,
                          "src": "1510:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48620,
                          "name": "erc721a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48522,
                          "src": "1492:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                            "typeString": "contract NFTMintWithERC721A"
                          }
                        },
                        "id": 48621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1500:9:34",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 219,
                        "src": "1492:17:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1492:24:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1482:34:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48625,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48627,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48582,
                          "src": "1537:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "39",
                          "id": 48628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1548:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "src": "1537:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e63652073686f756c642062652039",
                        "id": 48630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1551:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29e194f430da646fb02837613e7c705954766f5890892bb6c4e1170a4f61ec6e",
                          "typeString": "literal_string \"balance should be 9\""
                        },
                        "value": "balance should be 9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29e194f430da646fb02837613e7c705954766f5890892bb6c4e1170a4f61ec6e",
                          "typeString": "literal_string \"balance should be 9\""
                        }
                      ],
                      "id": 48626,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "1526:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:47:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48632,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:47:34"
                },
                {
                  "expression": {
                    "id": 48638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48633,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48582,
                      "src": "1583:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48636,
                          "name": "user2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48563,
                          "src": "1611:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48634,
                          "name": "erc721a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48522,
                          "src": "1593:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTMintWithERC721A_$48449",
                            "typeString": "contract NFTMintWithERC721A"
                          }
                        },
                        "id": 48635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1601:9:34",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 219,
                        "src": "1593:17:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1593:24:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1583:34:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48639,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48641,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48582,
                          "src": "1638:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1649:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1638:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e63652073686f756c642062652031",
                        "id": 48644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1652:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_675b86838b72d956fe80c51e424164ea5e48d46b089cf53543fefe5ee2c684bf",
                          "typeString": "literal_string \"balance should be 1\""
                        },
                        "value": "balance should be 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_675b86838b72d956fe80c51e424164ea5e48d46b089cf53543fefe5ee2c684bf",
                          "typeString": "literal_string \"balance should be 1\""
                        }
                      ],
                      "id": 48640,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "1627:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1627:47:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48646,
                  "nodeType": "ExpressionStatement",
                  "src": "1627:47:34"
                }
              ]
            },
            "functionSelector": "bcbabe14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_erc721A",
            "nameLocation": "781:12:34",
            "parameters": {
              "id": 48548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:2:34"
            },
            "returnParameters": {
              "id": 48549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:34"
            },
            "scope": 48750,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48749,
            "nodeType": "FunctionDefinition",
            "src": "1688:981:34",
            "nodes": [],
            "body": {
              "id": 48748,
              "nodeType": "Block",
              "src": "1728:941:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48652,
                      "mutability": "mutable",
                      "name": "user1",
                      "nameLocation": "1772:5:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48748,
                      "src": "1764:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48651,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1764:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48656,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7573657231",
                        "id": 48654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1789:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                          "typeString": "literal_string \"user1\""
                        },
                        "value": "user1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a1c2b8080ed4b6f56211e0295659ef87dd454b0a884198c10384f230525d4ee8",
                          "typeString": "literal_string \"user1\""
                        }
                      ],
                      "id": 48653,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8199,
                      "src": "1780:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 48655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:17:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1764:33:34"
                },
                {
                  "assignments": [
                    48658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48658,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "1815:8:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48748,
                      "src": "1807:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1807:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48662,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6f70657261746f72",
                        "id": 48660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1835:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                          "typeString": "literal_string \"operator\""
                        },
                        "value": "operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                          "typeString": "literal_string \"operator\""
                        }
                      ],
                      "id": 48659,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8199,
                      "src": "1826:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 48661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1826:20:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1807:39:34"
                },
                {
                  "assignments": [
                    48664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48664,
                      "mutability": "mutable",
                      "name": "user2",
                      "nameLocation": "1864:5:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48748,
                      "src": "1856:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48663,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1856:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48668,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7573657232",
                        "id": 48666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1881:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                          "typeString": "literal_string \"user2\""
                        },
                        "value": "user2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_34c50c398a4aad207e25eeca7d799b966805d48c8fd47a2a9dbc66d9224ff7c1",
                          "typeString": "literal_string \"user2\""
                        }
                      ],
                      "id": 48665,
                      "name": "makeAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8199,
                      "src": "1872:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 48667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1872:17:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1856:33:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48672,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48652,
                        "src": "1946:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48669,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4179,
                        "src": "1932:2:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15776",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1935:10:34",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15442,
                      "src": "1932:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:20:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48674,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:20:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48678,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48652,
                        "src": "1989:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 48679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1996:2:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 48675,
                        "name": "erc721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48525,
                        "src": "1962:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                          "typeString": "contract NFTMintWithERC721Enumerable"
                        }
                      },
                      "id": 48677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1979:9:34",
                      "memberName": "batchMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48488,
                      "src": "1962:26:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1962:37:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48681,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:37:34"
                },
                {
                  "assignments": [
                    48683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48683,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2017:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 48748,
                      "src": "2009:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48682,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2009:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48688,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48686,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48652,
                        "src": "2054:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48684,
                        "name": "erc721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48525,
                        "src": "2027:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                          "typeString": "contract NFTMintWithERC721Enumerable"
                        }
                      },
                      "id": 48685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2044:9:34",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45469,
                      "src": "2027:26:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 48687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2027:33:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2009:51:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48690,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48683,
                          "src": "2081:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 48691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2092:2:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "2081:13:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e63652073686f756c64206265203130",
                        "id": 48693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2096:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b4f3b8624b3a8738bc5bedce4066c96dc23167bfd04c1b0516db277d9d60dd3",
                          "typeString": "literal_string \"balance should be 10\""
                        },
                        "value": "balance should be 10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b4f3b8624b3a8738bc5bedce4066c96dc23167bfd04c1b0516db277d9d60dd3",
                          "typeString": "literal_string \"balance should be 10\""
                        }
                      ],
                      "id": 48689,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "2070:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2070:49:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48695,
                  "nodeType": "ExpressionStatement",
                  "src": "2070:49:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48699,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48658,
                        "src": "2223:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2233:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 48696,
                        "name": "erc721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48525,
                        "src": "2188:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                          "typeString": "contract NFTMintWithERC721Enumerable"
                        }
                      },
                      "id": 48698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2205:17:34",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45594,
                      "src": "2188:34:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 48701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2188:50:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48702,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:50:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48706,
                            "name": "user1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48652,
                            "src": "2293:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 48707,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48658,
                            "src": "2300:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 48704,
                            "name": "erc721Enumerable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48525,
                            "src": "2259:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                              "typeString": "contract NFTMintWithERC721Enumerable"
                            }
                          },
                          "id": 48705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2276:16:34",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45611,
                          "src": "2259:33:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 48708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2259:50:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f70657261746f722073686f756c6420626520617070726f766564",
                        "id": 48709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:29:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03de3f1219b66e8c6535ba33fd55fd7f7c5449e8715dbc11706def83a10c7087",
                          "typeString": "literal_string \"operator should be approved\""
                        },
                        "value": "operator should be approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03de3f1219b66e8c6535ba33fd55fd7f7c5449e8715dbc11706def83a10c7087",
                          "typeString": "literal_string \"operator should be approved\""
                        }
                      ],
                      "id": 48703,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "2248:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:93:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48711,
                  "nodeType": "ExpressionStatement",
                  "src": "2248:93:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48715,
                        "name": "user1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48652,
                        "src": "2426:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48716,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48664,
                        "src": "2433:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2440:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 48712,
                        "name": "erc721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48525,
                        "src": "2397:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                          "typeString": "contract NFTMintWithERC721Enumerable"
                        }
                      },
                      "id": 48714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2414:11:34",
                      "memberName": "transferNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48504,
                      "src": "2397:28:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 48718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:45:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48719,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:45:34"
                },
                {
                  "expression": {
                    "id": 48725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48720,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48683,
                      "src": "2452:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48723,
                          "name": "user1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48652,
                          "src": "2489:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48721,
                          "name": "erc721Enumerable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48525,
                          "src": "2462:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                            "typeString": "contract NFTMintWithERC721Enumerable"
                          }
                        },
                        "id": 48722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2479:9:34",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45469,
                        "src": "2462:26:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2462:33:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2452:43:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48726,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48728,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48683,
                          "src": "2516:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "39",
                          "id": 48729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2527:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "src": "2516:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e63652073686f756c642062652039",
                        "id": 48731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2530:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29e194f430da646fb02837613e7c705954766f5890892bb6c4e1170a4f61ec6e",
                          "typeString": "literal_string \"balance should be 9\""
                        },
                        "value": "balance should be 9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29e194f430da646fb02837613e7c705954766f5890892bb6c4e1170a4f61ec6e",
                          "typeString": "literal_string \"balance should be 9\""
                        }
                      ],
                      "id": 48727,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "2505:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:47:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48733,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:47:34"
                },
                {
                  "expression": {
                    "id": 48739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48734,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48683,
                      "src": "2562:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48737,
                          "name": "user2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48664,
                          "src": "2599:5:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48735,
                          "name": "erc721Enumerable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48525,
                          "src": "2572:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTMintWithERC721Enumerable_$48505",
                            "typeString": "contract NFTMintWithERC721Enumerable"
                          }
                        },
                        "id": 48736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2589:9:34",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45469,
                        "src": "2572:26:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2572:33:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2562:43:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48740,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48742,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48683,
                          "src": "2626:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2637:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2626:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c616e63652073686f756c642062652031",
                        "id": 48745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2640:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_675b86838b72d956fe80c51e424164ea5e48d46b089cf53543fefe5ee2c684bf",
                          "typeString": "literal_string \"balance should be 1\""
                        },
                        "value": "balance should be 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_675b86838b72d956fe80c51e424164ea5e48d46b089cf53543fefe5ee2c684bf",
                          "typeString": "literal_string \"balance should be 1\""
                        }
                      ],
                      "id": 48741,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2098,
                        2119
                      ],
                      "referencedDeclaration": 2119,
                      "src": "2615:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 48746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2615:47:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48747,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:47:34"
                }
              ]
            },
            "functionSelector": "51cc7264",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_erc721Enumerable",
            "nameLocation": "1697:21:34",
            "parameters": {
              "id": 48649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:2:34"
            },
            "returnParameters": {
              "id": 48650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1728:0:34"
            },
            "scope": 48750,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48518,
              "name": "Test",
              "nameLocations": [
                "494:4:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14070,
              "src": "494:4:34"
            },
            "id": 48519,
            "nodeType": "InheritanceSpecifier",
            "src": "494:4:34"
          }
        ],
        "canonicalName": "ERC721CompareTest",
        "contractDependencies": [
          48449,
          48505
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48750,
          14070,
          14019,
          9555,
          9230,
          8437,
          6377,
          5613,
          4120,
          4186,
          4183
        ],
        "name": "ERC721CompareTest",
        "nameLocation": "473:17:34",
        "scope": 48751,
        "usedErrors": [],
        "usedEvents": [
          1834,
          1838,
          1842,
          1846,
          1850,
          1854,
          1858,
          1862,
          1868,
          1874,
          1882,
          1890,
          1896,
          1902,
          1908,
          1914,
          4208,
          4213,
          4218,
          4225,
          4232,
          4239
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 34
}